"""======================== Логические выражения и операторы Python  =============================="""
"""===================== NoneType,Условные операторы. Тернарные операторы ========================="""
"""==========================================  ========================================"""

"""========================================== Boolean Type ========================================"""
# Неизменяемый тип данных, имеет всего 2 значения True/False
# print (bool(0)) # Ложь
# print (bool(-9)) #true
# print (bool(' ')) #true
# print (bool('')) #False
# print (bool(True)) #True
# print (bool('False')) #True
# print (bool(False)) #False

''' Логические выражения - это выражение результатом вычисления которого является True/False '''
# 4 == 2 #False
''' Логические операторы '''
# == -> Оператор сравнения
5 == 5 #True
5 == 3 #False
'5' == 5 #False

# != -> Не равно
5 != 4 #True (Т.Е 5-ка не равна 4-ке)
5 != 5 #False 

# > -> Больше
10 > 5 #True
5 > 10 #False

# < -> Меньше 
5 < 10 #True
10 < 5 #False

# >= -> Больше или равно
5 >= 5 #True 
5 >= 4 #True
5 >= 6 #False

# <= -> Меньше или равно 
5 <= 10 #True
5 <= 4 #False
5 <= 5 #True

"""========================================== and or not ========================================"""
# 1. and -> Логическое и
# 2. or -> Логическое или
# 3. not -> Логическое отрицание

""" and/or - операторы используются для обьеденения логических выражений """

# a = 7
# b = 5
# AND
# print (a == 5 and b == 5) #False (левая часть False, правая true -> False)
# print (a == 7 and b == 5 )#True (Обе части true -> True)
# a == 4 and b == 4 #False (Обе части False -> False)
# OR
# a == 5 or b == 5 #True (Если одна часть верно -> True)
# a == 5 or b == 12 #False (Если обе части False -> False)
# NOT 
# print (not True) #False (вызывает противоположный результат False>True, True>False)
# not a == 7 #False 

"""============================= Операторы идентификации =================================="""
# 1. in -> Проверяет наличие элемента
# 2. сравнение 
    # == -> Сравнение по значению
    # is -> Сравнивает по ячейкам памяти

# a = 'Hello'
# if "e" in a: 
    # print (True)

"""========================================== NoneType ========================================"""
# Неизменяемый тип данных, имеет только одно значение None
# print (bool(None)) #False
"""========================================== Условные операторы =============================="""
# нужны для того, чтобы при разных входных данных код выполнялся по разному
"""================================="""
# if условие: 
    # тело
#         # Тело будет работать, если условие верно
"""================================="""
# if Условие: 
#     Тело        
# else: 
#     Тело2
#     # Тело2 будет работать, когда условие 1 неверно
"""================================="""
# if Условие: 
#     Тело        
# elif Условие2:
    # Тело2
    # Тело2 будет работать, когда условие 1 неверно, а условие 2 верно
# else: 
#     Тело3
#     # Тело3 будет работать, когда условие 1 и условие 2 не верны 
"""================= Скелет условного оператора ================"""
# В одной конструкции -> только один if
# В одной конструкции -> сколько угодно elif
# В одной конструкции -> только один else
"""================================="""
'''
age = int(input('Введите ваш возраст: '))
if age <= 18:
    print ('Вы не достаточно взрослы')
else: 
    print ('Добро пожаловать!')    
print (age)
'''
"""================ Логический пример ================="""
'''
age = int(input('Введите число: '))
if age % 2 == 0:
    print ('Четное число')
else: 
    print ('Нечетное число')    
'''
"""================================="""
# age = int(input('Введите число: '))
# if age == 0: 
#     print ('Ноль')
# elif age >= 1:
#     print ('Положительно')
# else :
#     print ('Отрицательное')
"""========================================== Тернарные  операторы =============================="""
# Условие в одну строку (if else в одну строку)
"""================ синтаксис ================="""
# тело1 if условие else тело2
# num = int(input('Введите число - '))
# print ('нечетное') if num % 2 else print ('четное')
"""================ Маржовые операторы ================="""
# := -> Маржовый оператор - позволяет как присвоить так и вернуть значение
# print (num:=7)
# print (bool(num==9))
# print (num+10)
"""================================="""
'''
num = int(input('Введите числа: '))
if num %3 == 0 and num % 5== 0:
    print ('Fizzbuzz')
elif num % 5 == 0:
    print ('buzz')
elif num % 3 == 0:
    print ('Fizz')
else :
    print ('124')
'''
count = 0
number = input()
if type(number) == str:
    print (int(number),count:=number)
else:
 print (number)
print (type(count))
