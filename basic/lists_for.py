"""==========================================  ========================================"""
"""============  Тема: Список. Методы списков (List) + Цикл for Функция Range. кортеж ============"""
# Список - это изменяемый тип данных, индексируемый, упорядоченный, итерируемый.
# [] -> литералы (выражения, которые создают объекты определенного типа данных)
"""================================="""
# list_ = [1, 2, 3, '4', 'Hello0',[1,2,3], True, False ] 
# print (list_[5][1])
"""================================="""
# name = input('Введите имена через пробел: ').split()

# if "Floki" in name:
#     print ('Yes')
# else:
#     print ('No')
"""================ Создание списков ================="""
# 1. list(iterable)
# a = 'Hello'
# print (list(a))
    # 1.1 range() -> возвращает последовательность элементов
    # print (list(range(1,10))) # Последняя не включительно

# 2. [] -> Литералы
# list_ = ['']
# print (type(list_))
# list_ = [12] * 5 (12,12,12,12,12)

# range([start], stop,[step]) -> по умолчанию начинает с 0-индекса, последовательность каждый раз увеличевается на 1 и останавливается перед заданным числом(stop)
"""================ Методы списков ================="""
# # del -> удаление элемента
# list_ = [1,2,3]
# del list_ [0] Либо все содержимое
# print (list_)

''' .append() -> Отвечает за добавление элемента в конец списка '''
list_ = [1,2,3]
list_.append(4)
print (list_)

''' .extend(element[iterable]) -> Отвечает за расширение списка, т.е. одновременно можно добавить несколько списков(и тоже добавляет в конец) '''
list_ = [1,2,3]
list_.extend(['hello, 3, 4'])
print (list_)
 
'''.insert(index, element) -> добавляет элемент по индексу '''
list_=[1, 2, 3]
list_.insert(1,9)
print (list_)

''' .index (element [start], [end]) -> возвращает индекс элемента '''
list_ = [1,2,3,4,5,6,7]
print (list_.index(7))

'''.clear() -> очищает список'''
list_ = [1,2,3]
list_.clear()
print (list_)

''' .count(element) ->  считает кол-во вхождений element в списке '''
list_ = [1,2,3,4,5,6,7,1,2,1,1]
print (list_.count(1))
print (len(list_)) # Считает кол-во элементов в списке

''' .pop(index) -> Удаляет элементы списка по индексу, если индекс не указан, удаляет с конца '''
list_ = [1,2,3,4,5,6,7,1,2,1,1]
list_.pop(2)
print (list_)

''' .remove(element) -> удаляет первый элемент в списке '''
list_ = ['vasya', 'vova','vitya']
list_.remove('vasya')
print (list_)

''' .reverse() -> переворачивает список '''
list_ = ['vasya', 'vova','vitya'] 
list_.reverse()
print (list_)

''' .sort() -> Сортирует список по порядку'''
lost = ['a','d','r','d','1,2,3']
lost.sort(reverse=True)
print (lost)

''' .copy() -> поверхностное копирование '''
new_lost = lost.copy()
new_lost.append('2')
print (new_lost)
print (lost)

"""========================================== Цикл for ========================================"""
# цикл - это блок кода, который повторяется несколько раз
''' for -> работает с итерируемыми объектами, заканчивается тогда, когда пройдет по последнему элементу(когда доходит до конца) '''

bist = [1, 2, 3, 4, 5]
for b_element in bist:
    print (b_element)
"""================================="""
dist = 'Booody'
for b_element in dist:
    print (b_element)
"""================================="""
for i in range(11):
    print (i)
"""================================="""
ls = []
for i in range(11):
    ls.append(i)
print (ls)
"""================================="""
for i in range(11):
    if i == 3:
        print(i)
    elif i == 5:
        print('Отлично')
    else:
        print('hello')
"""================================="""
''' name = input('Введите имена через пробел: ').lower().split()
guests = input('Введите имя: ').lower().split()
for guest in guests:
    if guest in name:
        print (f'welcome - {guest}')
    else:
        print (f'good bye - {guest}') '''
"""=============== Tuple (Кортеж) =================="""
tuple_ = (1,2,3)
print (tuple_)
# , ->  является литералом
b = 1,
print (type(b))
"""================ Методы Tuple ================="""
''' .count(element) ->  считает кол-во вхождений element в списке '''
tupl = (2,3,4,5,6,7,1,1,1)
print (tupl.count(1))

''' .index(element) -> и возвращает индекс '''
print (tupl.index(1))
count = 0
for i in tupl:
    if i == 1:
        print (f'{count} - Индекс')
    count = count + 1

tuple_ = tupl,
print (type(tuple_))