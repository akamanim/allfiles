''' ========= Основный принципы ООП: Инкапсюлация ======== '''

''' Связь поведения объекта с его данными '''

''' Инкапсуляция - принцип ООП, у которого две трактовки :
1. Объединение всех свойст и методов в одну капсулу(класс)
2. Ограничение доступа к методам или атрибутам (скорытие данных от внешнего воздействия)'''

class Phone:
    number = '+996505996999'
    def print_number(self):
        print(f'Номер телефона: {self.number}')


my_phone = Phone()
my_phone.print_number()

# Инкапсюляция как управление доступом

class Point:
    def __init__(self,x,y) -> None:
        self.x = x 
        self.y = y

''' геттеры и сеттеры(интерфейсные методы) -> через них предполагается работа с защищенными и привытаными данными. Они используются для полкчения и установки значений(чтобы добавить логику проверки, а также измежать прямого доступа к этим атрибутам) '''
''' 1. Создайте класс PrivateProject. Внутри этого класса есть атрибуты класса: github_link и developers. В github_link'''